CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_NAME"	NVARCHAR2(10)		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(50)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(100)		NOT NULL,
	"MEMBER_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MEMBER_ADDRESS"	NVARCHAR2(200)		NULL,
	"MEMBER_FL"	CHAR(1)	DEFAULT 1	NOT NULL,
	"MEMBER_POINT"	NUMBER	DEFAULT 0	NOT NULL,
	"MEMBER_TEL"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '시퀀스 회원 번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원 이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호';

COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '회원 탈퇴여부(Y,N)';

COMMENT ON COLUMN "MEMBER"."MEMBER_DATE" IS '회원 가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADDRESS" IS '회원 주소';

COMMENT ON COLUMN "MEMBER"."MEMBER_FL" IS '회원 권한 (1, 2)';

COMMENT ON COLUMN "MEMBER"."MEMBER_POINT" IS '회원 포인트';

COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '전화번호';

CREATE TABLE "SELLING_DEVICE" (
	"SELLING_DEVICE_NO"	NUMBER		NOT NULL,
	"SELLING_DEVICE_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"BANK"	NVARCHAR2(15)		NOT NULL,
	"ACCOUNT_NO"	VARCHAR(30)		NOT NULL,
	"REQUEST_COMMENT"	NVARCHAR2(500)		NULL,
	"DEVICE_NO"	NUMBER		NOT NULL,
	"CAPACITY_NUMBER"	NUMBER		NOT NULL,
	"GRADE_NUMBER"	NUMBER		NOT NULL,
	"COLOR_NUMBER"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"STATUS_CODE"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "SELLING_DEVICE"."SELLING_DEVICE_NO" IS '매물 번호(PK)';

COMMENT ON COLUMN "SELLING_DEVICE"."SELLING_DEVICE_DATE" IS '판매 날짜';

COMMENT ON COLUMN "SELLING_DEVICE"."BANK" IS '은행 이름';

COMMENT ON COLUMN "SELLING_DEVICE"."ACCOUNT_NO" IS '계좌 번호';

COMMENT ON COLUMN "SELLING_DEVICE"."REQUEST_COMMENT" IS '요청사항';

COMMENT ON COLUMN "SELLING_DEVICE"."DEVICE_NO" IS '기종 번호';

COMMENT ON COLUMN "SELLING_DEVICE"."CAPACITY_NUMBER" IS '용량 코드';

COMMENT ON COLUMN "SELLING_DEVICE"."GRADE_NUMBER" IS '등급 코드';

COMMENT ON COLUMN "SELLING_DEVICE"."COLOR_NUMBER" IS '색상 번호';

COMMENT ON COLUMN "SELLING_DEVICE"."MEMBER_NO" IS '시퀀스 회원 번호';

COMMENT ON COLUMN "SELLING_DEVICE"."STATUS_CODE" IS '상태 코드';


CREATE TABLE "COLOR" (
	"COLOR_NO"	NUMBER		NOT NULL,
	"COLOR_NAME"	VARCHAR2(30)		NOT NULL,
	"COLOR_CODE"	VARCHAR2(30)		NOT NULL,
	"COLOR_DEVICE_IMG"	VARCHAR2(300)		NOT NULL,
	"DEVICE_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "COLOR"."COLOR_NO" IS '색상 번호';

COMMENT ON COLUMN "COLOR"."COLOR_NAME" IS '색상 이름';

COMMENT ON COLUMN "COLOR"."COLOR_CODE" IS '색상 코드';

COMMENT ON COLUMN "COLOR"."COLOR_DEVICE_IMG" IS '기기 색상 이미지';

COMMENT ON COLUMN "COLOR"."DEVICE_NO" IS '기종 번호';

CREATE TABLE "GRADE" (
	"GRADE_NUMBER"	NUMBER		NOT NULL,
	"GRADE_TYPE"	VARCHAR2(20)		NOT NULL,
	"GRADE_SCALE"	VARCHAR2(30)		NOT NULL,
	"DEVICE_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "GRADE"."GRADE_NUMBER" IS '등급 코드';

COMMENT ON COLUMN "GRADE"."GRADE_TYPE" IS '등급 타입';

COMMENT ON COLUMN "GRADE"."GRADE_SCALE" IS '등급 배율';

COMMENT ON COLUMN "GRADE"."DEVICE_NO" IS '기종 번호';

CREATE TABLE "CAPACITY" (
	"CAPACITY_NUMBER"	NUMBER		NOT NULL,
	"CAPACITY_TYPE"	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "CAPACITY"."CAPACITY_NUMBER" IS '용량 코드';

COMMENT ON COLUMN "CAPACITY"."CAPACITY_TYPE" IS '용량';

CREATE TABLE "DEVICE" (
	"DEVICE_NO"	NUMBER		NOT NULL,
	"DEVICE_RELEASE_DATE"	VARCHAR2(200)		NOT NULL,
	"DEVICE_RELEASE_PRICE"	NUMBER		NOT NULL,
	"DEVICE_IMG"	VARCHAR2(200)		NOT NULL,
	"DEVICE_OS"	NVARCHAR2(20)		NOT NULL,
	"DEVICE_RESOLUTION"	VARCHAR2(100)		NOT NULL,
	"DEVICE_PIXEL"	VARCHAR2(100)		NOT NULL,
	"DEVICE_FRONT_PIXEL"	VARCHAR2(100)		NOT NULL,
	"DEVICE_BACK_PIXEL"	VARCHAR2(100)		NOT NULL,
	"DEVICE_WIRELESS_CHARGE"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"DEVICE_FAST_CHARGE"	CHAR(1)	DEFAULT 'Y'	NOT NULL,
	"DEVICE_WEIGHT"	VARCHAR2(100)		NOT NULL,
	"DEVICE_BATTERY_CAPACITY"	VARCHAR2(100)		NOT NULL,
	"DEVICE_NAME"	VARCHAR2(100)		NOT NULL,
	"DEVICE_BUYING_PRICE"	NUMBER		NOT NULL,
	"DEVICE_SELLING_PRICE"	NUMBER		NOT NULL,
	"DEVICE_BRAND"	VARCHAR2(100)		NOT NULL,
	"DEVICE_RAM_CODE"	NUMBER		NOT NULL,
	"DEVICE_CPU_CODE"	NUMBER		NOT NULL,
	"DEVICE_DISPLAY_CODE"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "DEVICE"."DEVICE_NO" IS '기종 번호';

COMMENT ON COLUMN "DEVICE"."DEVICE_RELEASE_DATE" IS '기종 출시일';

COMMENT ON COLUMN "DEVICE"."DEVICE_RELEASE_PRICE" IS '기종 출고가';

COMMENT ON COLUMN "DEVICE"."DEVICE_IMG" IS '기종 대표 이미지';

COMMENT ON COLUMN "DEVICE"."DEVICE_OS" IS '운영체제';

COMMENT ON COLUMN "DEVICE"."DEVICE_RESOLUTION" IS '기종 해상도';

COMMENT ON COLUMN "DEVICE"."DEVICE_PIXEL" IS '기종화소밀도';

COMMENT ON COLUMN "DEVICE"."DEVICE_FRONT_PIXEL" IS '기종 전면화소';

COMMENT ON COLUMN "DEVICE"."DEVICE_BACK_PIXEL" IS '기종 후면화소';

COMMENT ON COLUMN "DEVICE"."DEVICE_WIRELESS_CHARGE" IS '충전가능여부(Y, N)';

COMMENT ON COLUMN "DEVICE"."DEVICE_FAST_CHARGE" IS '충전가능여부(Y, N)';

COMMENT ON COLUMN "DEVICE"."DEVICE_WEIGHT" IS '기종 무게';

COMMENT ON COLUMN "DEVICE"."DEVICE_BATTERY_CAPACITY" IS '배터리용량(GB,TB)';

COMMENT ON COLUMN "DEVICE"."DEVICE_NAME" IS '기종 이름';

COMMENT ON COLUMN "DEVICE"."DEVICE_BUYING_PRICE" IS '내폰 사기 가격';

COMMENT ON COLUMN "DEVICE"."DEVICE_SELLING_PRICE" IS '기본가';

COMMENT ON COLUMN "DEVICE"."DEVICE_BRAND" IS '제조사';

COMMENT ON COLUMN "DEVICE"."DEVICE_RAM_CODE" IS 'RAM  코드';

COMMENT ON COLUMN "DEVICE"."DEVICE_CPU_CODE" IS 'CPU 코드';

COMMENT ON COLUMN "DEVICE"."DEVICE_DISPLAY_CODE" IS '기종 화면 크기';

CREATE TABLE "REVIEW" (
	"REVIEW_NO"	NUMBER		NOT NULL,
	"REVIEW_TITLE"	VARCHAR2(500)		NOT NULL,
	"REVIEW_IMG"	VARCHAR2(500)		NULL,
	"REVIEW_CONTENT"	VARCHAR2(2000)		NOT NULL,
	"REVIEW_SCORE"	NUMBER		NOT NULL,
	"REVIEW_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"ORDER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "REVIEW"."REVIEW_NO" IS '리뷰 번호';

COMMENT ON COLUMN "REVIEW"."REVIEW_TITLE" IS '리뷰 제목';

COMMENT ON COLUMN "REVIEW"."REVIEW_IMG" IS '리뷰 사진';

COMMENT ON COLUMN "REVIEW"."REVIEW_CONTENT" IS '리뷰 내용';

COMMENT ON COLUMN "REVIEW"."REVIEW_SCORE" IS '리뷰 별점';

COMMENT ON COLUMN "REVIEW"."REVIEW_DATE" IS '작성 날짜';

COMMENT ON COLUMN "REVIEW"."ORDER_NO" IS '주문 번호';

CREATE TABLE "NOTICE" (
	"NOTICE_NUMBER"	NUMBER		NOT NULL,
	"NOTICE_TITLE"	VARCHAR2(500)		NOT NULL,
	"NOTICE_CONTENT"	NVARCHAR2(2000)		NOT NULL
);

COMMENT ON COLUMN "NOTICE"."NOTICE_NUMBER" IS '공지사항 번호';

COMMENT ON COLUMN "NOTICE"."NOTICE_TITLE" IS '공지사항 제목';

COMMENT ON COLUMN "NOTICE"."NOTICE_CONTENT" IS '공지사항 내용';

CREATE TABLE "EVENT" (
	"EVENT_NUMBER"	NUMBER		NOT NULL,
	"EVENT_IMAGE"	VARCHAR2(500)		NOT NULL,
	"EVENT_CONTENT"	VARCHAR2(500)		NULL
);

COMMENT ON COLUMN "EVENT"."EVENT_NUMBER" IS '이벤트 번호';

COMMENT ON COLUMN "EVENT"."EVENT_IMAGE" IS '이벤트 배너 이미지';

COMMENT ON COLUMN "EVENT"."EVENT_CONTENT" IS '이벤트 링크';

CREATE TABLE "CPU" (
	"DEVICE_CPU_CODE"	NUMBER		NOT NULL,
	"DEVICE_CPU_NAME"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "CPU"."DEVICE_CPU_CODE" IS 'CPU 코드';

COMMENT ON COLUMN "CPU"."DEVICE_CPU_NAME" IS 'CPU';

CREATE TABLE "RAM" (
	"DEVICE_RAM_CODE"	NUMBER		NOT NULL,
	"DEVICE_RAM_CAPACITY"	VARCHAR2(30)		NOT NULL
);

COMMENT ON COLUMN "RAM"."DEVICE_RAM_CODE" IS 'RAM 코드';

COMMENT ON COLUMN "RAM"."DEVICE_RAM_CAPACITY" IS 'RAM';

CREATE TABLE "DISPLAY" (
	"DEVICE_DISPLAY_CODE"	NUMBER		NOT NULL,
	"DEVICE_DISPLAY_SIZE"	VARCHAR2(100)		NOT NULL
);

COMMENT ON COLUMN "DISPLAY"."DEVICE_DISPLAY_CODE" IS '기종 화면 크기';

COMMENT ON COLUMN "DISPLAY"."DEVICE_DISPLAY_SIZE" IS '기종 화면 크기';

CREATE TABLE "ORDER" (
	"ORDER_NO"	NUMBER		NOT NULL,
	"ORDER_NAME"	NVARCHAR2(30)		NOT NULL,
	"ORDER_TEL"	VARCHAR2(30)		NOT NULL,
	"ORDER_COMMENT"	NVARCHAR2(500)		NULL,
	"ORDER_ADDRESS"	NVARCHAR2(200)		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"ORDER_STATUS_CODE"	NUMBER		NOT NULL,
	"PRODUCT_NUMBER"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "ORDER"."ORDER_NO" IS '주문 번호';

COMMENT ON COLUMN "ORDER"."ORDER_NAME" IS '받는 사람 이름';

COMMENT ON COLUMN "ORDER"."ORDER_TEL" IS '받는 사람 번호';

COMMENT ON COLUMN "ORDER"."ORDER_COMMENT" IS '요청사항';

COMMENT ON COLUMN "ORDER"."ORDER_ADDRESS" IS '주소';

COMMENT ON COLUMN "ORDER"."MEMBER_NO" IS '시퀀스 회원 번호';

COMMENT ON COLUMN "ORDER"."ORDER_STATUS_CODE" IS '주문 상태 코드';

COMMENT ON COLUMN "ORDER"."PRODUCT_NUMBER" IS '매물 번호(PK)';

CREATE TABLE "ORDER_STATUS" (
	"ODER_STATUS_CODE"	NUMBER		NOT NULL,
	"ORDER_STATUS_CONTENT"	NVARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "ORDER_STATUS"."ODER_STATUS_CODE" IS '주문 상태 코드';

COMMENT ON COLUMN "ORDER_STATUS"."ORDER_STATUS_CONTENT" IS '상품 준비중/횐불/배송중/배송 완료';

CREATE TABLE "CAPACITY_PRICE" (
	"DEVICE_NO"	NUMBER		NOT NULL,
	"CAPACITY_NUMBER"	NUMBER		NOT NULL,
	"CAPACITY_PRICE"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CAPACITY_PRICE"."DEVICE_NO" IS '기종 번호';

COMMENT ON COLUMN "CAPACITY_PRICE"."CAPACITY_NUMBER" IS '용량 코드';

COMMENT ON COLUMN "CAPACITY_PRICE"."CAPACITY_PRICE" IS '용량별 가격';

CREATE TABLE "BUYING_DEVICE" (
	"BUYING_DEVICE_NO"	NUMBER		NOT NULL,
	"BUYING_DEVICE_UPLOAD_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"BUYING_DEVICE_SOLD_DATE"	DATE		NULL,
	"BUYING_DEVICE_PRICE"	NUMBER		NOT NULL,
	"CAPACITY_NUMBER"	NUMBER		NOT NULL,
	"DEVICE_NO"	NUMBER		NOT NULL,
	"GRADE_NUMBER"	NUMBER		NOT NULL,
	"SOLD_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"COLOR_NUMBER"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "BUYING_DEVICE"."BUYING_DEVICE_NO" IS '매물 번호(PK)';

COMMENT ON COLUMN "BUYING_DEVICE"."BUYING_DEVICE_UPLOAD_DATE" IS '등록일';

COMMENT ON COLUMN "BUYING_DEVICE"."BUYING_DEVICE_SOLD_DATE" IS '판매일';

COMMENT ON COLUMN "BUYING_DEVICE"."BUYING_DEVICE_PRICE" IS '최종 구매 가격';

COMMENT ON COLUMN "BUYING_DEVICE"."CAPACITY_NUMBER" IS '용량 코드';

COMMENT ON COLUMN "BUYING_DEVICE"."DEVICE_NO" IS '기종 번호';

COMMENT ON COLUMN "BUYING_DEVICE"."GRADE_NUMBER" IS '등급 코드';

COMMENT ON COLUMN "BUYING_DEVICE"."SOLD_FL" IS '판매 여부';

COMMENT ON COLUMN "BUYING_DEVICE"."COLOR_NUMBER" IS '색상 번호';

CREATE TABLE "CHATTING_MESSAGE" (
	"CHATTING_MESSAGE_NO"	NUMBER		NOT NULL,
	"CHATTING_MESSAGE_CONTENT"	VARCHAR(4000)		NOT NULL,
	"CHATTING_MESSAGE_READ_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"CHATTING_MESSAGE_SEND_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"SENDER_NO"	NUMBER		NOT NULL,
	"CHATTING_ROOM_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHATTING_MESSAGE_NO" IS '메시지번호';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHATTING_MESSAGE_CONTENT" IS '메시지 내용';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHATTING_MESSAGE_READ_FL" IS '읽음 여부 (Y/N)';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHATTING_MESSAGE_SEND_DATE" IS '보낸 시간';

COMMENT ON COLUMN "CHATTING_MESSAGE"."SENDER_NO" IS '메시지 보낸  회원 번호';

COMMENT ON COLUMN "CHATTING_MESSAGE"."CHATTING_ROOM_NO" IS '채팅방 번호';

CREATE TABLE "CHATTING_ROOM" (
	"CHATTING_ROOM_NO"	NUMBER		NOT NULL,
	"CHATTING_ROOM_CREATE_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"ADMIN_NO"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "CHATTING_ROOM"."CHATTING_ROOM_NO" IS '채팅방 번호';

COMMENT ON COLUMN "CHATTING_ROOM"."CHATTING_ROOM_CREATE_DATE" IS '채팅방 생성일';

COMMENT ON COLUMN "CHATTING_ROOM"."ADMIN_NO" IS '시퀀스 회원 번호';

COMMENT ON COLUMN "CHATTING_ROOM"."MEMBER_NO" IS '시퀀스 회원 번호';

CREATE TABLE "SELLING_DEVICE_STATUS" (
	"SELLING_DEVICE_STATUS_CODE"	NUMBER		NOT NULL,
	"SELLING_DEVICE_STATUS_CONTENT"	NVARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "SELLING_DEVICE_STATUS"."SELLING_DEVICE_STATUS_CODE" IS '상태 코드';

COMMENT ON COLUMN "SELLING_DEVICE_STATUS"."SELLING_DEVICE_STATUS_CONTENT" IS '상태 상세 내용(신청 완료, 반려, 송금)';

CREATE TABLE "POINT_LOG" (
	"POINT_LOG_NO"	NUMBER		NOT NULL,
	"POINT_LOG_BALANCE"	NUMBER		NOT NULL,
	"POINT_LOG_CONTENT"	NVARCHAR2(30)		NOT NULL,
	"POINT_LOG_AMOUNT"	NUMBER		NOT NULL,
	"POINT_LOG_DATE"	DATE	DEFAULT CURRENT_DATE	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

COMMENT ON COLUMN "POINT_LOG"."POINT_LOG_NO" IS '시퀀스로';

COMMENT ON COLUMN "POINT_LOG"."POINT_LOG_BALANCE" IS '변동 후 잔액';

COMMENT ON COLUMN "POINT_LOG"."POINT_LOG_CONTENT" IS '적립/ 차감 내용';

COMMENT ON COLUMN "POINT_LOG"."POINT_LOG_AMOUNT" IS '차감은 음수로 저장';

COMMENT ON COLUMN "POINT_LOG"."POINT_LOG_DATE" IS '날짜';

COMMENT ON COLUMN "POINT_LOG"."MEMBER_NO" IS '시퀀스 회원 번호';

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "PK_SELLING_DEVICE" PRIMARY KEY (
	"SELLING_DEVICE_NO"
);

ALTER TABLE "COLOR" ADD CONSTRAINT "PK_COLOR" PRIMARY KEY (
	"COLOR_NO"
);

ALTER TABLE "GRADE" ADD CONSTRAINT "PK_GRADE" PRIMARY KEY (
	"GRADE_NUMBER"
);

ALTER TABLE "CAPACITY" ADD CONSTRAINT "PK_CAPACITY" PRIMARY KEY (
	"CAPACITY_NUMBER"
);

ALTER TABLE "DEVICE" ADD CONSTRAINT "PK_DEVICE" PRIMARY KEY (
	"DEVICE_NO"
);

ALTER TABLE "REVIEW" ADD CONSTRAINT "PK_REVIEW" PRIMARY KEY (
	"REVIEW_NO"
);

ALTER TABLE "NOTICE" ADD CONSTRAINT "PK_NOTICE" PRIMARY KEY (
	"NOTICE_NUMBER"
);

ALTER TABLE "EVENT" ADD CONSTRAINT "PK_EVENT" PRIMARY KEY (
	"EVENT_NUMBER"
);

ALTER TABLE "CPU" ADD CONSTRAINT "PK_CPU" PRIMARY KEY (
	"DEVICE_CPU_CODE"
);

ALTER TABLE "RAM" ADD CONSTRAINT "PK_RAM" PRIMARY KEY (
	"DEVICE_RAM_CODE"
);

ALTER TABLE "DISPLAY" ADD CONSTRAINT "PK_DISPLAY" PRIMARY KEY (
	"DEVICE_DISPLAY_CODE"
);

ALTER TABLE "ORDER" ADD CONSTRAINT "PK_ORDER" PRIMARY KEY (
	"ORDER_NO"
);

ALTER TABLE "ORDER_STATUS" ADD CONSTRAINT "PK_ORDER_STATUS" PRIMARY KEY (
	"ODER_STATUS_CODE"
);

ALTER TABLE "CAPACITY_PRICE" ADD CONSTRAINT "PK_CAPACITY_PRICE" PRIMARY KEY (
	"DEVICE_NO",
	"CAPACITY_NUMBER"
);

ALTER TABLE "BUYING_DEVICE" ADD CONSTRAINT "PK_BUYING_DEVICE" PRIMARY KEY (
	"BUYING_DEVICE_NO"
);

ALTER TABLE "CHATTING_MESSAGE" ADD CONSTRAINT "PK_CHATTING_MESSAGE" PRIMARY KEY (
	"CHATTING_MESSAGE_NO"
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "PK_CHATTING_ROOM" PRIMARY KEY (
	"CHATTING_ROOM_NO"
);

ALTER TABLE "SELLING_DEVICE_STATUS" ADD CONSTRAINT "PK_SELLING_DEVICE_STATUS" PRIMARY KEY (
	"SELLING_DEVICE_STATUS_CODE"
);

ALTER TABLE "POINT_LOG" ADD CONSTRAINT "PK_POINT_LOG" PRIMARY KEY (
	"POINT_LOG_NO"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_DEVICE_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"DEVICE_NO"
)
REFERENCES "DEVICE" (
	"DEVICE_NO"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_CAPACITY_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"CAPACITY_NUMBER"
)
REFERENCES "CAPACITY" (
	"CAPACITY_NUMBER"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_GRADE_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"GRADE_NUMBER"
)
REFERENCES "GRADE" (
	"GRADE_NUMBER"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_COLOR_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"COLOR_NUMBER"
)
REFERENCES "COLOR" (
	"COLOR_NO"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_MEMBER_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "SELLING_DEVICE" ADD CONSTRAINT "FK_SELLING_DEVICE_STATUS_TO_SELLING_DEVICE_1" FOREIGN KEY (
	"STATUS_CODE"
)
REFERENCES "SELLING_DEVICE_STATUS" (
	"SELLING_DEVICE_STATUS_CODE"
);

ALTER TABLE "COLOR" ADD CONSTRAINT "FK_DEVICE_TO_COLOR_1" FOREIGN KEY (
	"DEVICE_NO"
)
REFERENCES "DEVICE" (
	"DEVICE_NO"
);

ALTER TABLE "GRADE" ADD CONSTRAINT "FK_DEVICE_TO_GRADE_1" FOREIGN KEY (
	"DEVICE_NO"
)
REFERENCES "DEVICE" (
	"DEVICE_NO"
);

ALTER TABLE "DEVICE" ADD CONSTRAINT "FK_RAM_TO_DEVICE_1" FOREIGN KEY (
	"DEVICE_RAM_CODE"
)
REFERENCES "RAM" (
	"DEVICE_RAM_CODE"
);

ALTER TABLE "DEVICE" ADD CONSTRAINT "FK_CPU_TO_DEVICE_1" FOREIGN KEY (
	"DEVICE_CPU_CODE"
)
REFERENCES "CPU" (
	"DEVICE_CPU_CODE"
);

ALTER TABLE "DEVICE" ADD CONSTRAINT "FK_DISPLAY_TO_DEVICE_1" FOREIGN KEY (
	"DEVICE_DISPLAY_CODE"
)
REFERENCES "DISPLAY" (
	"DEVICE_DISPLAY_CODE"
);

ALTER TABLE "REVIEW" ADD CONSTRAINT "FK_ORDER_TO_REVIEW_1" FOREIGN KEY (
	"ORDER_NO"
)
REFERENCES "ORDER" (
	"ORDER_NO"
);

ALTER TABLE "ORDER" ADD CONSTRAINT "FK_MEMBER_TO_ORDER_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "ORDER" ADD CONSTRAINT "FK_ORDER_STATUS_TO_ORDER_1" FOREIGN KEY (
	"ORDER_STATUS_CODE"
)
REFERENCES "ORDER_STATUS" (
	"ODER_STATUS_CODE"
);

ALTER TABLE "ORDER" ADD CONSTRAINT "FK_BUYING_DEVICE_TO_ORDER_1" FOREIGN KEY (
	"PRODUCT_NUMBER"
)
REFERENCES "BUYING_DEVICE" (
	"BUYING_DEVICE_NO"
);

ALTER TABLE "CAPACITY_PRICE" ADD CONSTRAINT "FK_DEVICE_TO_CAPACITY_PRICE_1" FOREIGN KEY (
	"DEVICE_NO"
)
REFERENCES "DEVICE" (
	"DEVICE_NO"
);

ALTER TABLE "CAPACITY_PRICE" ADD CONSTRAINT "FK_CAPACITY_TO_CAPACITY_PRICE_1" FOREIGN KEY (
	"CAPACITY_NUMBER"
)
REFERENCES "CAPACITY" (
	"CAPACITY_NUMBER"
);

ALTER TABLE "BUYING_DEVICE" ADD CONSTRAINT "FK_CAPACITY_TO_BUYING_DEVICE_1" FOREIGN KEY (
	"CAPACITY_NUMBER"
)
REFERENCES "CAPACITY" (
	"CAPACITY_NUMBER"
);

ALTER TABLE "BUYING_DEVICE" ADD CONSTRAINT "FK_DEVICE_TO_BUYING_DEVICE_1" FOREIGN KEY (
	"DEVICE_NO"
)
REFERENCES "DEVICE" (
	"DEVICE_NO"
);

ALTER TABLE "BUYING_DEVICE" ADD CONSTRAINT "FK_GRADE_TO_BUYING_DEVICE_1" FOREIGN KEY (
	"GRADE_NUMBER"
)
REFERENCES "GRADE" (
	"GRADE_NUMBER"
);

ALTER TABLE "BUYING_DEVICE" ADD CONSTRAINT "FK_COLOR_TO_BUYING_DEVICE_1" FOREIGN KEY (
	"COLOR_NUMBER"
)
REFERENCES "COLOR" (
	"COLOR_NO"
);

ALTER TABLE "CHATTING_MESSAGE" ADD CONSTRAINT "FK_MEMBER_TO_CHATTING_MESSAGE_1" FOREIGN KEY (
	"SENDER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "CHATTING_MESSAGE" ADD CONSTRAINT "FK_CHATTING_ROOM_TO_CHATTING_MESSAGE_1" FOREIGN KEY (
	"CHATTING_ROOM_NO"
)
REFERENCES "CHATTING_ROOM" (
	"CHATTING_ROOM_NO"
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "FK_MEMBER_TO_CHATTING_ROOM_1" FOREIGN KEY (
	"ADMIN_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "CHATTING_ROOM" ADD CONSTRAINT "FK_MEMBER_TO_CHATTING_ROOM_2" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "POINT_LOG" ADD CONSTRAINT "FK_MEMBER_TO_POINT_LOG_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

COMMIT;


-------------------------------------------CHECK 제약 조건-------------
ALTER TABLE "MEMBER"
ADD CONSTRAINT "CHK_MEMBER_DEL_FL"
CHECK(MEMBER_DEL_FL IN ('Y', 'N'));

ALTER TABLE "DEVICE"
ADD CONSTRAINT "CHK_DEVICE_WIRELESS_CHARGE"
CHECK(DEVICE_WIRELESS_CHARGE IN ('Y', 'N'));

ALTER TABLE "DEVICE"
ADD CONSTRAINT "CHK_DEVICE_FAST_CHARGE"
CHECK(DEVICE_FAST_CHARGE IN ('Y', 'N'));

ALTER TABLE "BUYING_DEVICE"
ADD CONSTRAINT "CHK_SOLD_FL"
CHECK(SOLD_FL IN ('Y', 'N'));

ALTER TABLE "CHATTING_MESSAGE"
ADD CONSTRAINT "CHK_CHATTING_MESSAGE_READ_FL"
CHECK(CHATTING_MESSAGE_READ_FL IN ('Y', 'N'));



-----시퀀스 생성-------

-- 회원 번호 생성용 시퀀스 
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;

-- 포인트 사용 내역 시퀀스 
CREATE SEQUENCE SEQ_POINT_LOG_NO NOCACHE;

-- 중고폰 판매(내폰 팔기) 시퀀스 
CREATE SEQUENCE SEQ_SELLING_DEVICE_NO NOCACHE;

-- 기종 시퀀스
CREATE SEQUENCE SEQ_DEVICE_NO NOCACHE;

-- 색상 시퀀스
CREATE SEQUENCE SEQ_COLOR_NO NOCACHE;

-- 중고폰 구매(내폰 사기) 시퀀스
CREATE SEQUENCE SEQ_BUYING_DEVICE_NO NOCACHE;

-- 주문 시퀀스
CREATE SEQUENCE SEQ_ORDER_NO NOCACHE;

-- 리뷰 시퀀스
CREATE SEQUENCE SEQ_REVIEW_NO NOCACHE;

-- 채팅방 시퀀스
CREATE SEQUENCE SEQ_CHATTING_ROOM_NO NOCACHE;

-- 채팅 메시지 시퀀스
CREATE SEQUENCE SEQ_CHATTING_MESSAGE_NO NOCACHE;

-- 등급 시퀀스
CREATE SEQUENCE SEQ_GRADE_NO NOCACHE;



-- 이벤트 시퀀스
CREATE SEQUENCE SEQ_EVENT_NO NOCACHE;


COMMIT;








